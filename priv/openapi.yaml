openapi: 3.0.3
info:
  title: Sky Port core daemon user API
  description: |
    User facing API provided by swm-core daemon
  version: 1.0.0
  license:
    name: BSD 3-Clause License

paths:

  /user/remote:
    get:
      summary: List all remote sites
      description: >-
        Returns a list of remote site objects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoteSite'

  /user/node:
    get:
      summary: List all nodes
      description: >-
        Returns a list of node objects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'

  /user/flavor:
    get:
      summary: List all flavors
      description: >-
        Returns a list of flavor objects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flavor'

  /user/job:
    post:
      summary: Submit a new job script
      description: 'A new job is submitted with a specific job script'
      requestBody:
        description: Job script content
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                script_content:
                  type: string
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '405':
          description: Invalid input
        '400':
          description: User not found

    get:
      summary: List all jobs
      description: >-
        Returns a list of job objects
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'

  '/user/job/{jobId}':
    get:
      summary: Find job by ID
      description: Returns a single job information
      parameters:
        - name: jobId
          in: path
          description: ID of job to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Invalid job ID supplied
        '404':
          description: Job not found

    delete:
      summary: Cancels a job
      description: 'Cancels execution or pending of a job by job ID'
      parameters:
        - name: jobId
          in: path
          description: Job id to cancel
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Invalid job ID

    patch:
      summary: Update a job
      description: Modify the job state or properties
      parameters:
        - name: modification
          in: header
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          description: ID of job to update
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid job ID supplied
        '404':
          description: Job not found

  '/user/job/{jobId}/stdout':
    get:
      summary: Job stdout
      description: Get job standard output content
      parameters:
        - name: jobId
          in: path
          description: ID of job which stdout to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid job ID supplied
        '404':
          description: Job not found

  '/user/job/{jobId}/stderr':
    get:
      summary: Job stderr
      description: Get job standard error content
      parameters:
        - name: jobId
          in: path
          description: ID of job which stderr to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid job ID supplied
        '404':
          description: Job not found

externalDocs:
  description: Find out more about Sky Port project
  url: 'https://openworkload.org'

components:
  schemas:

    Job:
      title: Job
      description: A job information that is known to Sky Port
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Job ID
        name:
          type: string
          description: Job name
        state:
          type: string
          description: Current job state
          enum:
            - R
            - Q
            - W
            - F
            - E
            - T
            - C
        submit_time:
          type: string
          description: Job submit time
        start_time:
          type: string
          description: Job start time
        end_time:
          type: string
          description: Job end time
        duration:
          type: integer
          format: int64
          minimum: 0
          description: Job run time
        exitcode:
          type: integer
          format: int64
          minimum: 0
          description: Job exit code
        signal:
          type: integer
          format: int64
          minimum: 0
          description: Signal if job is terminated with a signal
        node_names:
          type: array
          items:
            type: string
            format: hostname
          description: List of hostnames of nodes allocated for job
        node_ips:
          type: array
          items:
            type: string
            format: ipv4
          description: List of node IP addresses allocated for job
        remote_id:
          type: string
          format: uuid
          description: Remote site ID
        flavor_id:
          type: string
          format: uuid
          description: Node flavor ID
        request:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: List of resources that are requested by job
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: List of resources that are actually allocated for job
        comment:
          type: string
          description: A comment associated with job

    Flavor:
      title: Flavor
      description: A flavor information that is known to Sky Port
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Flavor ID
        name:
          type: string
          description: Flavor name
        remote_id:
          type: string
          description: Related remote object ID configured in swm-core
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: List of resources flavor provides
        price:
          type: number
          format: currency
          description: Price of a node of this flavor per hour

    RemoteSite:
      title: Remote site
      description: A remote site information
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Remote site ID
        name:
          type: string
          description: Remote site name in Sky Port
        account_id:
          type: string
          description: Account ID
        server:
          type: string
          format: hostname
          description: Remote site server hostname
        port:
          type: integer
          format: int64
          minimum: 0
        kind:
          type: string
          description: Remote site kind
        default_image_id:
          type: string
          description: Default image ID
        default_flavor_id:
          type: string
          description: Default flavor ID

    Node:
      title: Node
      description: A node information
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Node ID
        name:
          type: string
          description: Node name in Sky Port
        host:
          type: string
          format: hostname
          description: Node system hostname
        api_port:
          type: integer
          format: int64
          minimum: 0
        state_power:
          type: string
          description: Node power state
          enum:
            - up
            - down
        state_alloc:
          type: string
          description: Node jobs allocation state
          enum:
            - idle
            - stopped
            - offline
            - busy
            - maint
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: List of resources node provides
        roles:
          type: array
          items:
            $ref: '#/components/schemas/NodeRole'
          description: Roles assigned to node

    Resource:
      title: Resource
      description: A resource information
      type: object
      properties:
        name:
          type: string
          description: Resource name
        count:
          type: integer
          format: int64
          minimum: 0

    NodeRole:
      title: Node role
      description: A node role information
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Role ID
        name:
          type: string
          description: Role name
        comment:
          type: string
          description: Role comment
