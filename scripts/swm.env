#!/bin/bash

###############################################################################
## Environment variables
###############################################################################

RELX_REPLACE_OS_VARS=true
export RELX_REPLACE_OS_VARS

ME=$( readlink -f "${BASH_SOURCE[0]}" )
ROOT_DIR=$( dirname "$( dirname "$ME" )" )

SWM_VERSION=$( ${ROOT_DIR}/scripts/version )
export SWM_VERSION

if [ -z $SWM_MODE ]; then
    SWM_MODE=NORMAL
fi
export SWM_MODE

if [ -z $SWM_ROOT ]; then
    SWM_ROOT=/opt/swm
fi
export SWM_ROOT

SWM_VERSION_DIR=${SWM_ROOT}/${SWM_VERSION}
export SWM_VERSION_DIR

SWM_LIB=${SWM_VERSION_DIR}/lib/*/ebin
export SWM_LIB

if [ -z $SWM_SPOOL ]; then
    SWM_SPOOL=${SWM_ROOT}/spool
fi
export SWM_SPOOL

if [ -z $SWM_COOKIE ]; then
    SWM_COOKIE=devcookie
fi
export SWM_COOKIE

if [ -z $SWM_SNAME ]; then
    SWM_SNAME="node"
fi
export SWM_SNAME

SWM_MNESIA_DIR=${SWM_SPOOL}/${SWM_SNAME}@$(hostname -f)/confdb
export SWM_MNESIA_DIR

SWM_LOG_DIR=${SWM_SPOOL}/${SWM_SNAME}@$(hostname -f)/log
export SWM_LOG_DIR

if [ -z $SWM_CLUSTER_CA ]; then
    SWM_CLUSTER_CA=${SWM_SPOOL}/secure/cluster/cert.pem
fi
export SWM_CLUSTER_CA

if [ -z $SWM_API_HOST ]; then
  export SWM_API_HOST=localhost
fi
export SWM_API_HOST

if [ -z $SWM_API_PORT ]; then
    SWM_API_PORT=10001
fi
export SWM_API_PORT

if [ -z $SWM_PARENT_PORT ]; then
    SWM_PARENT_PORT=10002
fi
export SWM_PARENT_PORT

if [ -z $SWM_PARENT_HOST ]; then
    SWM_PARENT_HOST=localhost
fi
export SWM_PARENT_HOST

if [ -z $SWM_JOB ]; then
  SWM_JOB=${SWM_VERSION_DIR}/bin/swmjob
fi
export SWM_JOB

if [ -z $SWM_CTL ]; then
  SWM_CTL=${SWM_VERSION_DIR}/bin/swmctl
fi
export SWM_CTL

###############################################################################
# Helpers
###############################################################################

config_from_env() {
    awk '{
        while(match($0,"[$]{[^}]*}")) {
            var=substr($0,RSTART+2,RLENGTH -3)
            gsub("[$]{"var"}",ENVIRON[var])
        }
    }1' < "$1" > "$2"
}

if [ ! -d $SWM_ROOT ]; then
  echo "Root directory ${SWM_ROOT} not found"
  exit 1
fi

if [ ! -d $SWM_SPOOL ]; then
  echo "Spool directory ${SWM_SPOOL} not found"
  exit 1
fi

###############################################################################
# Development environment specials
###############################################################################

if [ "${ROOT_DIR}" != "${SWM_VERSION_DIR}" ]; then
    SWM_LIB=${ROOT_DIR}/_build/default/lib/*/ebin
    export SWM_LIB
fi

if [ "${ROOT_DIR}" != "${SWM_VERSION_DIR}" ]; then
    SWM_VM_ARGS="${ROOT_DIR}/config/vm.args"
    SWM_VM_ARGS_TMPL="${SWM_VM_ARGS}.tmpl"
    if [ ! -f $SWM_VM_ARGS_TMPL ]; then
        echo "Config template file $SWM_VM_ARGS_TMPL not found"
        exit 1
    fi
    config_from_env ${SWM_VM_ARGS_TMPL} ${SWM_VM_ARGS}
    if [ ! -f $SWM_VM_ARGS ]; then
        echo "Config file $SWM_VM_ARGS not found"
        exit 1
    fi
    export SWM_VM_ARGS
fi

if [ "${ROOT_DIR}" != "${SWM_VERSION_DIR}" ]; then
    SWM_SYS_CONFIG="${ROOT_DIR}/config/sys.config"
    SWM_SYS_CONFIG_TMPL="${SWM_SYS_CONFIG}.tmpl"
    if [ ! -f $SWM_SYS_CONFIG_TMPL ]; then
        echo "Config template file $SWM_SYS_CONFIG_TMPL not found"
        exit 1
    fi
    config_from_env ${SWM_SYS_CONFIG_TMPL} ${SWM_SYS_CONFIG}
    if [ ! -f $SWM_SYS_CONFIG ]; then
        echo "Config file $SWM_SYS_CONFIG not found"
        exit 1
    fi
    export SWM_SYS_CONFIG
fi

env | grep "SWM\|RELX"

