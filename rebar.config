%% vim: ts=4 sw=4 et ft=erlang et

{minimum_otp_vsn, "24"}.

{erl_opts,
 [debug_info,
  compressed,
  warn_bif_clash,
  warn_export_all,
  warn_obsolete_guard,
  warn_unused_import,
  warn_unused_record,
  %warn_untyped_record, % disabled because wm_cert.erl includes a lot of certificate related untyped records
  warn_shadow_vars,
  warn_unused_vars,
  warn_export_vars,
  warn_exported_vars,
  warn_unused_function,
  warn_deprecated_function,
  strict_validation,
  warn_missing_spec]}.

{deps,
 [{gun, "2.0.0-rc.2"},
  {cowboy, "2.9.0"},
  {jsx, "2.8.3"},
  {jwalk, "1.1.3"},
  {parse_trans, "3.1.0"},
  {json_rec, {git, "https://github.com/justinkirby/json_rec.git", {ref, "8c72324"}}},
  {folsom, "0.8.5"},
  {recon, "2.3.2"},
  {sync, "0.1.3"},
  {meck, "0.8.12"}]}.

{profiles, [{test, [{deps, [meck]}]}]}.

{relx,
 [{release, {swm, semver}, [swm, sasl]},
  {sys_config, "./config/sys.config.tmpl"},
  {vm_args, "./config/vm.args.tmpl"},
  {dev_mode, false},
  {include_src, false},
  {include_erts, true},
  {overlay,
   [%% swm-sched
    {mkdir, "lib64"},
    {copy, "../swm-sched/bin/swm-sched", "bin/"},
    {copy, "../swm-sched/bin/swm-sched-dummy.so", "lib64/"},
    {copy, "../swm-sched/bin/swm-sched-fair-sharing.so", "lib64/"},
    {copy, "../swm-sched/bin/swm-sched-fcfs.so", "lib64/"},
    %% swm-porter
    {copy, "c_src/porter/swm-porter", "bin/"},
    %% swmctl
    {copy, "scripts/ctl.escript", "bin/"},
    {copy, "scripts/swmctl", "bin/"},
    %% swmjob
    {copy, "scripts/job.escript", "bin/"},
    {copy, "scripts/swmjob", "bin/"},
    %% swm-create-cert
    {copy, "scripts/create-cert.escript", "bin/"},
    {copy, "scripts/swm-create-cert", "bin/"},
    %% openstack
    {mkdir, "scripts"},
    {copy, "scripts/openstack-vm-init.sh", "scripts/"},
    %% aux
    {copy, "scripts/swm-docker-finalize.sh", "scripts/"},
    {copy, "scripts/setup-skyport.linux", "scripts/"},
    {copy, "scripts/run-swm-foreground.sh", "scripts/"},
    {copy, "scripts/setup.linux", "scripts/"},
    {copy, "scripts/swm.env", "scripts/"},
    {mkdir, "log/sasl"}]},
  {extended_start_script, true}]}.

{dialyzer, [{warnings, [no_return, error_handling, race_conditions, unmatched_returns, underspecs]}]}.

{cover_enabled, true}.

{eunit_opts, [verbose]}.

{eunit_compile_opts, [export_all]}.

{ct_opts, []}.

{ct_log_dir, "/tmp/swm-test-logs"}.

{ct_compile_opts, [{i, "./include/"}]}.

{edoc_opts, [{index_columns, 1}, {sort_functions, false}, {preprocess, true}]}.

% Linter, see https://github.com/inaka/elvis_core/wiki/Rules
{elvis, [
  #{ dirs    => ["src/**/*"],
     filter  => "*.erl",
     rules => [
       {elvis_style, no_debug_call, #{debug_functions => [{ct, pal}, {ct, print}]}},
       {elvis_style, operator_spaces, #{rules => [{right, ","}, {right, "++"}, {left, "++"}]}},
       {elvis_style, function_naming_convention, #{regex => "^([a-z][a-z0-9]*_?)*$"}},
       {elvis_style, nesting_level, #{level => 5}},
       {elvis_style, god_modules, #{limit => 50}},
       {elvis_style, state_record_and_type, disable},
       {elvis_style, atom_naming_convention, #{ignore => [wm_cert]}},
       {elvis_style, no_spec_with_records, disable},
       {elvis_text_style, line_length, #{limit => 120, skip_comments => false}},
       {elvis_text_style, no_trailing_whitespace},
       {elvis_text_style, no_tabs}
     ],
     ruleset => erl_files,
     ignore => [mochijson2]
   },
  #{ dirs    => ["."],
     filter  => "rebar.config",
     ruleset => rebar_config
   }
]}.

{plugins, [rebar3_format, rebar3_depup, rebar3_lint]}.

{format, [
          {files, ["src/**/*.?rl", "include/*.hrl", "test/**/*.?rl"]},
          {formatter, default_formatter},
          {preserve_empty_lines, true},
          {ignore, ["src/lib/wm_cert.erl"]},  % https://github.com/AdRoll/rebar3_format/issues/311
          {options, #{paper => 120, ribbon => 120, unquote_atoms => false}}
         ]
}.
